name: Test Code

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

concurrency:
    group: ${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    tests:
        name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os:
                    - ubuntu-latest
                    - windows-latest
                python-version:
                    - "3.9"
                    - "3.10"
                    - "3.11"
                    - "3.12"

        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
                  allow-prereleases: true
                  cache: pip

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip hatch uv

            - name: Show environment
              run: |
                   hatch test --show --python ${{ matrix.python-version }}

            - name: Run tests
              run: |
                   hatch test --cover --python ${{ matrix.python-version }}
                   mv .coverage ".coverage.py${{ matrix.python-version }}"

            - name: Upload coverage data
              if: matrix.os != 'windows-latest'
              uses: actions/upload-artifact@v4
              with:
                  name: "coverage-data-py${{ matrix.python-version }}"
                  path: ".coverage.py${{ matrix.python-version }}"
                  if-no-files-found: error
                  include-hidden-files: true

    coverage:
        name: Coverage
        runs-on: ubuntu-latest
        needs: tests
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
                  cache: pip

            - name: Install dependencies
              run: python -m pip install --upgrade coverage[toml]

            - name: Download data
              uses: actions/download-artifact@v4
              with:
                  merge-multiple: true

            - name: Combine coverage and fail if it's <95%
              run: |
                  python -m coverage combine
                  python -m coverage html --skip-covered --skip-empty
                  python -m coverage report --fail-under=95

            - name: Upload HTML report
              if: ${{ failure() }}
              uses: actions/upload-artifact@v4
              with:
                  name: html-report
                  path: htmlcov
