[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling" ]

[project]
name = "servestatic"
description = "Production-grade static file server for Python web apps."
readme = "README.md"
keywords = [ "asgi", "django", "http", "server", "static", "staticfiles", "wsgi" ]
license = "MIT"
authors = [ { name = "Mark Bakhit" } ]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Django",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Communications :: File Sharing",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
]
dynamic = [ "version" ]
optional-dependencies.brotli = [ "brotli" ]
urls.Changelog = "https://archmonger.github.io/ServeStatic/latest/changelog/"
urls.Documentation = "https://archmonger.github.io/ServeStatic/"
urls.Homepage = "https://github.com/Archmonger/ServeStatic"

[tool.hatch.version]
path = "src/servestatic/__init__.py"

[tool.hatch.build.targets.sdist]
include = [ "/src" ]

[tool.hatch.metadata]
license-files = { paths = [ "LICENSE.md" ] }

[tool.hatch.envs.default]
installer = "uv"

# >>> Hatch Tests <<<

[tool.hatch.envs.hatch-test]
extra-dependencies = [ "pytest-sugar", "requests", "brotli" ]
randomize = true
matrix-name-format = "{variable}-{value}"

# Django 3.2
[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.9", "3.10" ]
django = [ "3.2" ]

# Django 4.0
[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.9", "3.10" ]
django = [ "4.0" ]

# Django 4.1
[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.9", "3.10", "3.11" ]
django = [ "4.1" ]

# Django 4.2
[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.9", "3.10", "3.11", "3.12" ]
django = [ "4.2" ]

# Django 5.0
[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.10", "3.11", "3.12" ]
django = [ "5.0" ]

# Django 5.1
[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.10", "3.11", "3.12", "3.13" ]
django = [ "5.1" ]

[tool.hatch.envs.hatch-test.overrides]
matrix.django.dependencies = [
  { if = [
    "3.2",
  ], value = "django~=3.2" },
  { if = [
    "4.0",
  ], value = "django~=4.0" },
  { if = [
    "4.1",
  ], value = "django~=4.1" },
  { if = [
    "4.2",
  ], value = "django~=4.2" },
  { if = [
    "5.0",
  ], value = "django~=5.0" },
  { if = [
    "5.1",
  ], value = "django~=5.1" },
]

# >>> Hatch Documentation <<<

[tool.hatch.envs.docs]
template = "docs"
detached = true
dependencies = [
  "mkdocs",
  "mkdocs-git-revision-date-localized-plugin",
  "mkdocs-material",
  "mkdocs-include-markdown-plugin",
  "linkcheckmd",
  "mkdocs-spellcheck[all]",
  "mkdocs-git-authors-plugin",
  "mkdocs-minify-plugin",
  "mike",
]

[tool.hatch.envs.docs.scripts]
serve = [ "cd docs && mkdocs serve" ]
build = [ "cd docs && mkdocs build --strict" ]
linkcheck = [
  "linkcheckMarkdown docs/ -v -r",
  "linkcheckMarkdown README.md -v -r",
  "linkcheckMarkdown CHANGELOG.md -v -r",
]
deploy_latest = [ "cd docs && mike deploy --push --update-aliases {args} latest" ]
deploy_develop = [ "cd docs && mike deploy --push develop" ]

# >>> Hatch pre-commit <<<

[tool.hatch.envs.precommit]
template = "pre-commit"
detached = true
dependencies = [ "pre-commit>=3,<4" ]

[tool.hatch.envs.precommit.scripts]
check = [ "pre-commit run --all-files" ]
update = [ "pre-commit autoupdate" ]

# >>> Hatch pyproject-format <<<

[tool.hatch.envs.pyproject]
template = "pyproject"
detached = true
dependencies = [ "pyproject-fmt" ]

[tool.hatch.envs.pyproject.scripts]
format = [ "pyproject-fmt pyproject.toml" ]

# >>> Generic Tools <<<

[tool.black]
target-version = [ "py39" ]

[tool.ruff]
line-length = 120
format.preview = true
lint.extend-ignore = [
  "ARG001",  # Unused function argument
  "ARG002",  # Unused method argument
  "ARG004",  # Unused static method argument
  "FBT001",  # Boolean-typed positional argument in function definition
  "FBT002",  # Boolean default positional argument in function definition
  "PLR2004", # Magic value used in comparison
  "SIM115",  # Use context handler for opening files
  "SLF001",  # Private member accessed
]
lint.preview = true

[tool.pytest.ini_options]
addopts = """\
    --strict-config
    --strict-markers
    """

[tool.coverage.run]
branch = true
parallel = true
source = [ "src/", "tests/" ]

[tool.coverage.paths]
source = [ "src/" ]

[tool.coverage.report]
show_missing = true
